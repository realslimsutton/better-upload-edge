{"name":"upload-button","title":"Upload Button","type":"registry:component","dependencies":["better-upload","lucide-react"],"registryDependencies":["button"],"files":[{"path":"registry/better-upload/upload-button.tsx","type":"registry:component","content":"import { Button } from '@/components/ui/button';\r\nimport type { UploadHookControl } from 'better-upload/client';\r\nimport { Loader2, Upload } from 'lucide-react';\r\nimport { useId } from 'react';\r\n\r\ntype UploadButtonProps = {\r\n  control: UploadHookControl<false>;\r\n  accept?: string;\r\n  metadata?: Record<string, unknown>;\r\n  uploadOverride?: (\r\n    ...args: Parameters<UploadHookControl<false>['upload']>\r\n  ) => void;\r\n\r\n  // Add any additional props you need.\r\n};\r\n\r\nexport function UploadButton({\r\n  control: { upload, isPending },\r\n  accept,\r\n  metadata,\r\n  uploadOverride,\r\n}: UploadButtonProps) {\r\n  const id = useId();\r\n\r\n  return (\r\n    <Button disabled={isPending} className=\"relative\" type=\"button\">\r\n      <label htmlFor={id} className=\"absolute inset-0 cursor-pointer\">\r\n        <input\r\n          id={id}\r\n          className=\"absolute inset-0 size-0 opacity-0\"\r\n          type=\"file\"\r\n          accept={accept}\r\n          onChange={(e) => {\r\n            if (e.target.files?.[0] && !isPending) {\r\n              if (uploadOverride) {\r\n                uploadOverride(e.target.files[0], { metadata });\r\n              } else {\r\n                upload(e.target.files[0], { metadata });\r\n              }\r\n            }\r\n            e.target.value = '';\r\n          }}\r\n        />\r\n      </label>\r\n      {isPending ? (\r\n        <>\r\n          <Loader2 className=\"size-4 animate-spin\" />\r\n          Upload file\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Upload className=\"size-4\" />\r\n          Upload file\r\n        </>\r\n      )}\r\n    </Button>\r\n  );\r\n}\r\n"}]}